/**
 * @license
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use "../../sass/colors";
@use "../../sass/typescale";
@use "../../sass/common";

lumi-span {
  display: inline;
  position: relative;
}

.outer-span {
  -webkit-tap-highlight-color: none;
  -webkit-text-size-adjust: none;
  touch-action: manipulation;

  &.focused {
    background-color: var(--md-sys-color-highlight-cyan-light);

    &.show-focus-underline {
      background-color: inherit;
      color: var(--md-sys-color-on-surface-low);
      font-weight: bold;
      opacity: 0.6;
      text-decoration: underline;
    }
  }
  &.unfocused {
    opacity: 0.3;
  }
}

span.monospace {
  font-family: "Roboto Mono", monospace;
  font-size: 13px;
}

span.collapsed {
  display: none;
}

.outer-span.span-summary-text {
  font-weight: 500;
  font-size: 12px;

  display: list-item;

  &::marker {
    color: var(--md-sys-color-on-surface-highest-variant);
  }
}

.outer-span.left-annotation-summary-text {
  color: var(--md-sys-color-on-surface-high);
}

.outer-span.concept-expand-text {
  font-style: italic;
}

.lumi-span-renderer-element {
  .footnote-marker {
    cursor: pointer;
    color: var(--md-sys-color-primary);
  }

  .character {
    // Fonts
    &.paper-text {
      @include common.lumi-paper-text;
    }

    &.span-summary-text {
      @include typescale.label-small;
      font-size: 12px;
    }

    // Enum classes for lumi_doc.ts/InnerTagName
    &.b,
    &.strong {
      font-weight: bold;
    }

    &.i,
    &.em {
      font-style: italic;
    }

    &.u {
      text-decoration: underline;
    }

    &.ref {
      color: var(--md-sys-color-on-surface-higher);
      cursor: pointer;
    }

    &.spanref {
      color: var(--md-sys-color-primary);
      cursor: pointer;
      text-decoration: underline;
    }

    &.concept {
      color: var(--md-sys-color-primary);
      cursor: pointer;
    }

    &.a {
      // TODO(ellenj): Figure out better highlight colors for links vs. concepts vs. references.
      color: var(--md-sys-color-primary);
      text-decoration: underline;
      cursor: pointer;
    }

    .monospace {
      font-family: "Roboto Mono", monospace;
    }

    &.code {
      font-family: "Roboto Mono", monospace;
      font-size: 14px;
      padding: common.$spacing-xs 0;

      background-color: var(--md-sys-color-gray-container);
    }

    // Color classes (kept in sync with shared/lumi_doc.ts > HighlightColors type.
    &.cyan {
      background-color: var(--md-sys-color-highlight-cyan);
    }

    &.green {
      background-color: var(--md-sys-color-highlight-green);
    }

    &.yellow {
      background-color: var(--md-sys-color-highlight-yellow);
    }

    &.orange {
      background-color: var(--md-sys-color-highlight-orange);
    }

    &.pink {
      background-color: var(--md-sys-color-highlight-pink);
    }

    &.purple {
      background-color: var(--md-sys-color-highlight-purple);
    }

    &.blue {
      background-color: var(--md-sys-color-highlight-blue);
    }

    &.gray {
      background-color: var(--md-sys-color-highlight-light-gray);
    }
  }

  // Katex outputs both katex-mathml and katex-html tags.
  // We only show the katex-mathml and hide katex-html.
  .katex-html {
    display: none;
  }

  .citation-marker {
    display: inline-flex;
    gap: common.$spacing-small;
    padding: 0 common.$spacing-xs;
  }

  .inline-citation {
    background: var(--md-sys-color-gray-container);
    color: var(--md-sys-color-on-gray-container-soft);

    @include typescale.body-small;
    padding: 0 common.$spacing-small;
    border-radius: 4px;

    cursor: pointer;

    &.span-inline-citation {
      background: var(--md-sys-color-gray-container);
      color: var(--md-sys-color-on-gray-container);
    }
  }

  .equation {
    padding: 0 common.$spacing-xs;

    &.display {
      display: block;
      width: 100%;
      text-align: center;
      padding: common.$spacing-xl 0;

      overflow-y: auto;
    }
  }

  .clickable {
    cursor: pointer;
  }
}

.span-fade-in {
  opacity: 1;
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 0.3s;
}

@keyframes fadeInOpacity {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

// Keep name in sync with constants.ts
.span-blink {
  opacity: 1;
  animation-name: blink;
  animation-iteration-count: 1;
  animation-duration: 0.8s;
}

@keyframes blink {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.4;
  }
  100% {
    opacity: 1;
  }
}
